apiVersion: v1
kind: Namespace
metadata:
  name: sock-shop
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts-db
  labels:
    name: carts-db
    app: carts-db
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts-db
  template:
    metadata:
      labels:
        name: carts-db
        app: carts-db
        version: v1
    spec:
      containers:
      - name: carts-db
        resources:
          limits:
            cpu: "750m"
            memory: "512Mi"
          requests:
            cpu: "100m"
            memory: "256Mi"
        image: pcxg/mongo:v1
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            add:
              - CHOWN
              - SETGID
              - SETUID
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  labels:
    name: carts-db
    app: carts-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
    name: tcp-carts-db
  selector:
    name: carts-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  labels:
    name: carts
    app: carts
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts
  template:
    metadata:
      labels:
        name: carts
        app: carts
        version: v1
    spec:
      containers:
      - name: carts
        image: pcxg/carts:v1
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
        ports:
         - containerPort: 80
        env:
         - name: ZIPKIN
           value: zipkin.istio-system.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    name: carts
    app: carts
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-carts
  selector:
    name: carts
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
    app: catalogue-db
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
  template:
    metadata:
      labels:
        name: catalogue-db
        app: catalogue-db
        version: v1
    spec:
      containers:
      - name: catalogue-db
        resources: 
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests: 
            cpu: "100m"
            memory: "256Mi"
        image: pcxg/catalogue-db:v1
        env:
          - name: MYSQL_ROOT_PASSWORD
            value: fake_password
          - name: MYSQL_DATABASE
            value: socksdb
        ports:
        - name: mysql
          containerPort: 3306
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
    app: catalogue-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 3306
    targetPort: 3306
    name: tcp-catalogue-db
  selector:
    name: catalogue-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels:
    name: catalogue
    app: catalogue
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue
  template:
    metadata:
      labels:
        name: catalogue
        app: catalogue
        version: v1
    spec:
      containers:
      - name: catalogue
        image: pcxg/catalogue:v1.1
        resources:
          limits:
            cpu: "0.5"
            memory: 128Mi
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    name: catalogue
    app: catalogue
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-catalogue
  selector:
    name: catalogue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  namespace: sock-shop
  labels:
    name: front-end
    app: front-end
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      name: front-end
  template:
    metadata:
      labels:
        name: front-end
        app: front-end
        version: v1
    spec:
      containers:
      - name: front-end
        image: pcxg/front-end:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits: 
            cpu: 2
            memory: 512Mi
        ports:
        - containerPort: 8079
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    name: front-end
    app: front-end
  namespace: sock-shop
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8079
    nodePort: 30001
    name: http-front-end
  selector:
    name: front-end
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-db
  labels:
    name: orders-db
    app: orders-db
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders-db
  template:
    metadata:
      labels:
        name: orders-db
        app: orders-db
        version: v1
    spec:
      containers:
      - name: orders-db
        image: pcxg/mongo:v1
        resources: 
          limits: 
            cpu: 500m
            memory: 512Mi
          requests: 
            cpu: 100m
            memory: 128Mi
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            add:
              - CHOWN
              - SETGID
              - SETUID
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  labels:
    name: orders-db
    app: orders-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
    name: tcp-orders-db
  selector:
    name: orders-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  labels:
    name: orders
    app: orders
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: orders
  template:
    metadata:
      labels:
        name: orders
        app: orders
        version: v1
    spec:
      containers:
      - name: orders
        image: pcxg/orders:v1
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
        env:
         - name: ZIPKIN
           value: zipkin.istio-system.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    name: orders
    app: orders
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-orders
  selector:
    name: orders
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  labels:
    name: payment
    app: payment
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: payment
  template:
    metadata:
      labels:
        name: payment
        app: payment
        version: v1
    spec:
      containers:
      - name: payment
        image: pcxg/payment:v1
        resources: 
          limits: 
            cpu: 500m
            memory: 256Mi
          requests: 
            cpu: 100m
            memory: 128Mi
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    name: payment
    app: payment
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-payment
  selector:
    name: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-master
  labels:
    name: queue-master
    app: queue-master
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: queue-master
  template:
    metadata:
      labels:
        name: queue-master
        app: queue-master
        version: v1
    spec:
      containers:
      - name: queue-master
        image: pcxg/queue-master:v1
        resources: 
          limits: 
            cpu: 500m
            memory: 1024Mi
          requests: 
            cpu: 100m
            memory: 512Mi
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  labels:
    name: queue-master
    app: queue-master
  annotations:
    prometheus.io/path: "/prometheus"
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-queue-master
  selector:
    name: queue-master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
    app: rabbitmq
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: rabbitmq
  template:
    metadata:
      labels:
        name: rabbitmq
        app: rabbitmq
        version: v1
    spec:
      containers:
      - name: rabbitmq
        image: pcxg/rabbitmq:v1
        resources: 
          limits: 
            cpu: 500m
            memory: 256Mi
          requests: 
            cpu: 100m
            memory: 128Mi
        ports:
        - containerPort: 5672
          name: rabbitmq
        - containerPort: 4369
          name: epmd
        securityContext:
          capabilities:
            add:
              - CHOWN
              - SETGID
              - SETUID
              - DAC_OVERRIDE
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
    app: rabbitmq
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 5672
    targetPort: 5672
    name: tcp-rabbitmq
  - port: 4369
    name: "tcp-epmd"
  selector:
    name: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  labels:
    name: shipping
    app: shipping
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: shipping
  template:
    metadata:
      labels:
        name: shipping
        app: shipping
        version: v1
    spec:
      containers:
      - name: shipping
        image: pcxg/shipping:v1
        resources: 
          limits:
            cpu: 500m
            memory: 512Mi
          requests: 
            cpu: 100m
            memory: 256Mi
        env:
         - name: ZIPKIN
           value: zipkin.istio-system.svc.cluster.local
         - name: JAVA_OPTS
           value: -Xms64m -Xmx128m -XX:PermSize=32m -XX:MaxPermSize=64m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom
        ports:
        - containerPort: 80
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    name: shipping
    app: shipping
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-shipping
  selector:
    name: shipping
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  labels:
    name: user-db
    app: user-db
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: user-db
  template:
    metadata:
      labels:
        name: user-db
        app: user-db
        version: v1
    spec:
      containers:
      - name: user-db
        image: pcxg/user-db:v1
        resources: 
          limits: 
            cpu: 500m
            memory: 256Mi
          requests: 
            cpu: 100m
            memory: 128Mi
        ports:
        - name: mongo
          containerPort: 27017
        securityContext:
          capabilities:
            add:
              - CHOWN
              - SETGID
              - SETUID
              - NET_ADMIN
              - NET_RAW
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  labels:
    name: user-db
    app: user-db
  namespace: sock-shop
spec:
  ports:
    # the port that this service should serve on
  - port: 27017
    targetPort: 27017
    name: tcp-user-db
  selector:
    name: user-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels:
    name: user
    app: user
    version: v1
  namespace: sock-shop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: user
  template:
    metadata:
      labels:
        name: user
        app: user
        version: v1
    spec:
      containers:
      - name: user
        image: pcxg/user:v1
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
        ports:
        - containerPort: 80
        env:
        - name: MONGO_HOST
          value: user-db:27017
        securityContext:
          capabilities:
            add:
              - NET_BIND_SERVICE
              - NET_ADMIN
              - NET_RAW
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    name: user
    app: user
  namespace: sock-shop
spec:
  type: NodePort
  ports:
    # the port that this service should serve on
  - port: 80
    targetPort: 80
    name: http-user
    nodePort: 30080
  selector:
    name: user
